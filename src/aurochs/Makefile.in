OCAMLMKLIB = @OCAMLMKLIB@
OCAMLOPT= @OCAMLOPT@
OCAMLC = @OCAMLC@
OCAMLDEP = @OCAMLDEP@

MLLIST = util.cmx  talk_level.cmx  pffpsf.cmx\
	 opt.cmx  talk.cmx  seq.cmx  boolean.cmx  peg.cmx\
	 int_operators.cmx  bytes.cmx  pack.cmx  machine.cmx \
	 nog_packer.cmx  nog.cmx  canonify.cmx  noggie.cmx\
	 aurochs.cmx  grammar.cmx convert_grammar.cmx\
	 check.cmx  compiler.cmx

CLIST = alloc.o  aurochs_native.o  cnog.o  cnog_unpack.o\
	cpack.o  parse_tree.o  pushdown.o  staloc.o


all: $(MLLIST) $(CLIST)
	$(OCAMLOPT) -pack -o aurochs_pack.cmx $(MLLIST) 
	$(OCAMLMKLIB) -failsafe -o aurochs $(CLIST)

.SUFFIXES: .ml .mli .cmx .cmi

grammar.cmi: grammar.mli
	$(OCAMLC) grammar.mli

.ml.cmx:
	$(OCAMLOPT) -for-pack Aurochs_pack -I . -c -o $@  $<
.c.o: 
	$(OCAMLOPT) -ccopt -I. -ccopt -g -ccopt -O2 -c $<

clean:
	rm genmachine.byte nog_packer.ml cnog_unpack.c cnog_unpack.h\
	   *.cmx *.cmi *.cmo *.o libaurochs.a dllaurochs.so

genmachine: 
	$(OCAMLC) unix.cma str.cma -g pffpsf.ml util.ml unix_util.ml genmachine.ml -o genmachine.byte
	./genmachine.byte

deps:
	$(OCAMLDEP) *.ml > .deps

include .deps
