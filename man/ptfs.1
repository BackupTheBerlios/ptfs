.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
.TH PTFS "1" "September 2009" "PTFS version 0.0.3" "User Commands"
.SH NAME
PTFS \- Parse Tree File System

.SH SYNOPSIS
ptfs \fB\-g\fR GRAMMARFILE [INPUTFILES] MOUNTPOINT

.SH DESCRIPTION
PTFS (Parse Tree File System) is a file system allowing to navigate 
through parse tree. It uses parsing expressions grammar to contstruct
file system structure (parse tree) for the given text.

.SS "general options:"
.TP
\fB\-o\fR opt,[opt...]
mount options
.TP
\fB\-h\fR   \fB\-\-help\fR
print short help
.TP
\fB\-fh\fR  \fB\-\-fhelp\fR
print full help
.TP
\fB\-V\fR   \fB\-\-version\fR
print version
.SS "PTFS options:"
.TP
\fB\-g\fR, \fB\-\-grammar\fR=\fIGRAMMARFILE\fR
Set file name with a grammar

.SH USAGE EXAMPLE
Try the folowing.
Create the files test.peg, text1, text2 and ptfs/ directory.

.nf
Contents of test.peg:
start ::= expr                                                       

expr ::= <sum> term '+' expr </sum>
         | term
         ;

term ::= <mult> term '*' factor </mult>
         | factor
         ;

factor ::= <symbol> 's' </symbol>
           | '(' expr  ')'
           ;

Contents of text1:
s+s*s

Contents of text2:
(s+s)*s

Now map the file 'text1' into a new ptfs instance, so type:
	ptfs -g grammar.peg text1 ptfs/
or:	
	ptfs -g grammar.peg ptfs/
	readlink -f text1 > ptfs/__parsed

Then map the file 'text2' into the existing ptfs instance:
	readlink -f text2 > ptfs/__parsed

Try to novigate through a new mounted ptfs instance.

After that unparse the file 'text1' 
and try to novigate through ptfs instance:
	echo text1 > ptfs/__unparse

Now unmount ptfs instance, so type:
	fusermount -u ptfs/
.fi

.SH LICENSE
PTFS is under GNU Lesser General Public License, version 3.
Aurochs (PTFS backend parser) is under GNU Lesser General Public License, version 3.
See the file LICENSE in the PTFS sources for details.

.SH FEEDBACK
PTFS website: ptfs.berlios.de
