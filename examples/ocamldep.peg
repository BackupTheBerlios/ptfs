start ::= (sp not_let_word sp)* glob_scope EOF;

sp_smb ::= (' '|'\n'|'\t');
sp ::= (comment|' '|'\n'|'\t')*;
comment ::= "(*" (~"*)" sigma)* "*)";

word ::=(~sp_smb sigma)+;
word_no_semicol ::= (~(sp_smb|";") sigma)+;
not_let_word ::= ~"let" word;

let ::= "let" ;
in ::= "in";
then ::= "then";
begin ::= "begin";
end ::= "end";

openkeyword ::= "in"|"then"|"begin"|"try"|"->"|(~";;" ";");
not_let_not_openkeyword ::= ~((let|openkeyword) sp_smb) word_no_semicol;


glob_scope ::= (glob_fdef (sp not_let_word* sp)*)*;
loc_scope ::= 
	(
		(sp openkeyword)+
		((sp fdef)|(sp <tst> not_let_not_openkeyword </tst>)+)
	)+
;

glob_fdef ::= <fdef> "let" sp glob_fdecl sp "=" 
	((sp fdef) | (sp <tst> not_let_not_openkeyword </tst>)+) sp loc_scope? </fdef>
;
glob_fdecl ::= <fdecl> word </fdecl> (sp ( ~"=" word | ("?" sp word sp "=" sp word)?) )* ;

fdef ::= "let" sp fdecl sp "=" 
	((sp fdef) | (sp <tst> not_let_not_openkeyword </tst>)+) sp loc_scope?
;


fdecl ::= word (sp ( ~"=" word | ("?" sp word sp "=" sp word)?) )* ;
