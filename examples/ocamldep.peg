start ::= (sp not_let_word sp)* glob_scope EOF;

sp_smb ::= (' '|'\n'|'\t');
sp ::= (comment|' '|'\n'|'\t')*;
sp_ne ::= (' '|'\n'|'\t')+;
comment ::= "(*" (~"*)" sigma)* "*)";

smb ::= 
	comment	
	| ":=" 
	| ~keyword sigma 
;

word ::= (~(sp_smb|";") sigma)+;
not_let_word ::= ~"let" word;

let ::= "let" ;
in ::= "in";
then ::= "then";
begin ::= "begin";
end ::= "end";

not_let ::= sigma;

keyword ::= let | in | ";" | "=" | "begin" | "then";
not_let_not_openkeyword ::= ~(let|openkeyword) word;

openkeyword ::= in|then|begin|";";

glob_scope ::= (fdef (sp not_let_word* sp)*)*;
loc_scope ::= 
	(
		(sp openkeyword)+
		((sp fdef)|(sp <tst> not_let_not_openkeyword </tst>)+)
	)+
;

fdef ::= <fdef> "let" sp_ne fdecl sp "=" 
	((sp fdef) | (sp <tst> not_let_not_openkeyword </tst>)+) sp loc_scope? </fdef>
;

fdecl ::= <fdecl> word </fdecl> (sp ( ~"=" word | ("?" sp word sp "=" sp word)?) )* ;

